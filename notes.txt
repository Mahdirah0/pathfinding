A* algorithm

Solve the problem by using the algorithm

Features:
	-Allowing to left click to put starting node
	-Right click to put end node
	-Middle click to put walls
	-Button to start

Put two nodes on screen and show the OPTIMAL path to get there (A* algo)

What do we need?

Board Array
We need to visualize the board
Allow the cell to have the coordinate corresponding to the array e.g cell coordinates = arr[x][y]
Depending on the user input (mouse click) do each thing
Having the algorithm run on the Board Array and visualize at the same time


Board = [
S 0 0 0 0 0
0 0 0 0 0 0 
0 0 0 0 0 0
0 0 0 0 0 0
0 0 0 0 0 0
0 0 0 0 0 E
]

After algorithm

Board = [
S 9 8 7 6 5
0 0 0 0 0 4 
0 0 0 0 0 3
0 0 0 0 0 2
0 0 0 0 0 1
0 0 0 0 0 E
]


Number represent the distance away from end node

Starting node = (0,0)		Ending node = (5,5)

When visiting node need to check if it is a wall or it is already visited
Choosing only the shortest distance away from the ending node and current node

Visualization: 
When the user clicks the cell the ui changes and the board array contains the node
S = start
# = walls
N = end

number = distance away from ending node and current node

If the node has been visited then they must have a blue colour. If the cell has a number then the cell div will have 
visited of "true"

Steps:

